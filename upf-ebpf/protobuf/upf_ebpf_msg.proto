// Copyright (c) 2017, The Regents of the University of California.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// * Neither the names of the copyright holders nor the names of their
// contributors may be used to endorse or promote products derived from this
// software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package upf_ebpf.pb;

option go_package = "github.com/omec-project/upf-epc/pfcpiface/bess_pb";

message KeysData {
  uint64 srcIface = 1;
  uint32 tunnelIP4Dst = 2;
  uint32 tunnelTEID = 3;
  uint32 ueIPsrcAddr = 4;
  uint32 inetIPdstAddr = 5;
  uint32 ueSrcPort = 6;
  uint32 inetSrcPort = 7;
  uint32 protoID = 8;
}

message ValuesData {
  uint64 pdrID = 1;
  uint32 fseID = 2;
  uint32 ctrID = 3;
  uint32 qerID = 4;
  uint32 farID = 5;
}

message UPFeBPFCommandClearArg {}

message UPFeBPFArg {
  message Conf {
    string access_port = 1; /// Name of the access port
    string core_port = 2; /// Name of the core port
    enum LogLevel {
      DISABLED = 0;
      ERR = 1;
      WARNING = 2;
      NOTICE = 3;
      INFO = 4;
      DEBUG = 5;
    }
    LogLevel log_level = 3;
  }
  Conf conf = 1;
}

message UPFeBPFCommandAddPDRArg {
  int64 priority = 1;
  KeysData keys = 2; /// The values to check for in each field.
  KeysData masks = 3; /// The bitmask for each field -- set `0x0` to ignore the field altogether.
  ValuesData values = 4; /// The values to check for in each fieldv.
}


